#Зад. 50 2022-IN-03 Вашите колеги от съседната лаборатория работят по проект, в който до сега се е ползвала нестандартна имплементация на командата java.
#По време на миграцията с цел използване на стандартна имплементация на командата се оказало, че на много места командата се вика по стария, грешен начин, който вече е невалиден.
#Вашата задача е да напишете shell скрипт iwojima.sh, който работи подобно на старата имплементация на java, но вътрешно вика новата имплементация по правилния начин.
#Файловият формат JAR (Java ARchive) представлява пакет, който обединява няколко Java class файлове, допълнителни мета-данни и различни ресурси.
#Файлове в този формат обикновенно (но не задължително) имат разширение .jar. Част от метаданните във файла указват кой е главният клас,
#чийто метод main() се изпълнява по подразбиране. Въпросният main() метод ще получи списък с аргументите, указани при извикването на командата java (подобно на main() функцията в езика C).
#Едно от извикванията на стандартната имплементация на командата java (единственото, което разглеждаме в тази задача) има следният синтаксис: java [options] -jar filename [args] където:
#• options – незадължителна поредица от опции на командата java, разделени с интервал; всяка опция задължително започва с тире;
#• filename – име на JAR файл, който да бъде изпълнен, използва се винаги с опция -jar;
#• args – незадължителни аргументи, с които ще бъде стартиран main() методът на класа по подразбиране (аргументи на самата Java програма).
#Като пример разполагаме с JAR файл (app.jar), с един клас в него, чийто main() метод реализира единствено функционалност, еквивалента на следният bash код:
#if [ -z "${qux}" ]; then
#qux=default
#fi
#echo "${qux}"
#Общият вид на изпълнение с командата java би бил:
#$ java -jar ./app.jar
#default
#Една от стандартните опции на командата java е -Dproperty=value, с което се дефинира променлива с име property и със стойност value.
#При нужда от няколко променливи, за всяка се ползва отделна опция -D. Пример за правилно ползване на опцията в стандартната имплементация:
#$ java -Dqux=foo -jar /path/to/app.jar
#foo
#За съжаление, нестандартната имплементация на java, която е ползвана до момента, работи по друг начин. Пример:
#$ java -jar ./app.jar -Dqux=foo
#default
#$ java -Dqux=foo -jar ./app.jar -hoge fuga
#default
#$ java -jar -Dqux=foo app.jar
#foo
#Ако трябва да обобщим как работи нестандартната имплементация:
#• всичко след името на JAR файла са аргументи за main() метода (напр. -hoge и fuga);
#• името на JAR файла е някъде след опцията -jar;
#• опции за java командата може да има и преди, и след опцията -jar;
#• опцията -Dproperty=value работи само ако е след опцията -jar.
#Забележки: Вашият скрипт iwojima.sh няма нужда да поддържа извиквания, които не подават опция -jar.
#За удобство приемаме, че опциите (вкл. property и value), имената на JAR файловете и аргументите не могат да съдържат интервали

#!/bin/bash

options=
args=
values=
name=
state=0

for arg in "$@"
do
        if [[ $state -eq 0 ]];then
                jar=$(echo $arg | egrep "^-jar$" )
                if [[ -n $jar ]];then
                        state=1
                else
                        opt=$(echo $arg | egrep "^\-[^D]=$")
                        if [[ -n $opt ]];then
                                options="$options $opt"
                        fi
                fi
        elif [[ $state -eq 1 ]];then
                if [[ $arg =~ ^\-D.+=.+$ ]];then
                        values="$values $arg"
                elif [[ $arg =~ ^\-[^D] ]];then
                        options="$options $arg"
                elif [[ $arg =~ ^[^\-] ]];then
                        if [[ -f $arg ]];then
                                name=$arg
                                state=2
                        fi
                fi
        else
                args="^$args $arg"
        fi
done

if [[ $state -eq 0 ]];then
        exit 1
else
        java $options $values -jar $name $args
fi
