=>Changing file permissions

chmod
->работи с числово и символно представяне на правата

suid=4                   0 664
guid=2			(0->special flag)	
sticky bit=1
-------------
no permissions=0

chmod 1754 test -числово представяне
chmod u=rw,g=rw, o=r <name file> -символно представяне

u=user
g=group
o=owner
+ добавя
- премахва
=

chmod -R <permissions> <name> -променя рекурсивно
chmod -R 0777 test33

=>Permissions по подразбиране
files 666
directories 777

=>UMASK=маска

Взимаме дефолтните и вадим "нещо" от тях, така че като създаваме файл или директория, те да нямат абсолютно пълни права
-докато е сесията

umask 022
f: 666-022=644
d: 777-022=755


=>CP -Копиране

cp <file> <dir> -копираме файла в директорията
cp bar2 dir2	-копираме файла bar2  в директорията dir2

cp bar2/.../ =cp .bar2/.../
cp etc/passwd  ~/my_passwd -копира etc/passwd с ново име  ~/my_passwd 

=>MV -Преместване и променяне на име

1) mv <file> <dir> -местим файла в директорията
mv bar2 dir5

2) mv bar2 ../new_dir <new name> -преместваме файла с ново име

mv 66666 62503 -променя името от 66666 в 62503

=> UNIX filesystem structure
	-blocks(блокове)-> Най-малкото парче, на което могат да се съдържат данни
	
	-inode -> Всеки файл има inode
		  Съдържат се: 
			permissions
			time stamp
			owner,group
			size
			колко блока заема
			link count
			incode number

		Сочи към блокове от данни
		Имаме пойнтър към неговото съдържание


Файлът се състои от ИМЕ+ inode
Директориите са файлове, съдържащи ИМЕНА на файлове +inodes

	-superblocks(суперблокове)->Съдържат информация за цялата файлова система

ls -i <name> -виждаме inodes

в inode има 15 пойнтера 
	-първите 12 -сочат към блокове от данни (direct blocks)
	-13тия -сочи към блок,който съдържа блок и те сочат към блокове с данни (indirect)
	-14тия -сочи към др. блокове и те към data -блокове (double indirect blocks)
	-15тия -блок-блок-блок (triple indirect blocks)


=>Hard links:
Работят като референции
НЯМА hard link към директории
НЕ може към празен файл/ файл,който не съществува
НЕ заема допълнително място, не разширява паметта
сочат към едно и също нещо

ln <name><path> -създаване на hard link

ln f1 ../dir2/f2

ls -i -проверява дали сочи към едно и също нещо



=>Symbolic links:
Mapping на filename към filename
Разширява файловата система
Може да създадем symblink към файл, който не съществува -- счупен sym линк
Може към директории

ln -s
ln-s /home/teachers/katrin/foo  foo_sym_link

!Типа ще е l
!Подава се ПЪЛЕН път!
