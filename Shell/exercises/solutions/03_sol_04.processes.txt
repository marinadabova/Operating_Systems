04.processes задачи-решения:

01. (04-a-5000) Намерете командите на 10-те най-стари процеси в системата.
ps -e -o cmd= --sort=start_time |head

02. (04-a-6000) Намерете PID и командата на процеса, който заема най-много виртуална памет в системата.
ps -e -o pid,cmd,vsz --sort=vsz | tail -1

03. (04-a-6300) Изведете командата на най-стария процес.
ps -e -o cmd= --sort=start_time | head -1

04. (04-b-5000) Намерете колко физическа памет заемат всички процеси на потребителската група root.
 ps -e -g root -o pid,group,drs | awk '{total+=$3} END {print total}'


05. (04-b-6100) Изведете имената на потребителите, които имат поне 2 процеса, чиято команда е vim (независимо какви са аргументите й).
ps -eo user,comm | awk '$2 ~/vim$/' | cut -d' ' -f1 | uniq -d

?06. (04-b-6200) Изведете имената на потребителите, които не са логнати в момента, но имат живи процеси.
 ps -e -o user |sort| uniq| grep -v "$(whoami)"


07. (04-b-7000) Намерете колко физическа памет заемат осреднено всички процеси на потребителската група root. Внимавайте, когато групата няма нито един процес.

 ps -e -g root -o pid,group,drs | awk 'BEGIN {lines=0}{lines+=1; total+=$3} END {if (lines==0){print total}else {print total/lines}}' 
ps -e -g root -o pid,group,drs | awk 'BEGIN {lines=0}{lines+=1; total+=$3} END {OFMT="%.3f";;if (lines==0){print total}else {print total/lines}}'

08. (04-b-8000) Намерете всички PID и техните команди (без аргументите), които нямат tty, което ги управлява. Изведете списък само с командите без повторения.

ps -e -o pid,tty,comm | awk '{if($2=="?") print $1,$3}' |uniq

?09. (04-b-9000) Да се отпечатат PID на всички процеси, които имат повече деца от родителския си процес.
- while read id parent; do if [ $parent -ne 0 -a $(ps --ppid="${id}" -o pid= 2>/dev/null | wc -l) -ge $(ps --ppid="${parent}" -o pid= 2>/dev/null | wc -l) ]; then echo $id; fi; done < <(ps -e -o pid=,ppid=)
